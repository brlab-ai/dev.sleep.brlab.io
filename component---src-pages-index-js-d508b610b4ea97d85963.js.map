{"version":3,"file":"component---src-pages-index-js-d508b610b4ea97d85963.js","mappings":"mIAsBA,IAnBiB,SAAC,GAA2D,IAAD,IAAxDA,SAAAA,OAAwD,WAA7CC,EAA6C,MAAlCC,gBAAAA,OAAkC,WAAhBD,EAAgB,EAS1E,OACE,0BAAQE,UAAU,kBAChB,sBAAIA,UAAU,uCAAuCH,GACpDE,GACC,qBAAGC,UAAU,kCAAkCD,M,iICb/CE,EAAiBC,EAAQ,MAAzBD,aA4CR,EAzCoB,SAAC,GAAiB,IAAD,IAAdE,EAAc,EAAdA,QACrB,OACE,gBAAC,EAAAC,KAAD,CACEC,GAAIJ,EAAa,CACfK,OAAQH,EAAQG,OAChBC,IAAI,WAAYJ,EAAQK,OAE1BR,UAAU,mFAEV,gBAAC,EAAAS,EAAD,CACEC,OAAOC,EAAAA,EAAAA,GAAQ,UAACR,EAAQS,aAAT,aAAC,EAAeC,WAC/BC,IAAG,UAAEX,EAAQS,aAAV,aAAE,EAAeG,kBAEtB,uBAAKf,UAAU,aACb,sBAAIA,UAAU,8BAA8BG,EAAQa,OACpD,qBAAGhB,UAAU,sCACVG,EAAQc,gBCTnB,EAVqB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,OACE,uBAAKlB,UAAU,wEACZkB,EAASC,KAAI,SAAChB,GAAD,OACZ,gBAAC,EAAD,CAAaA,QAASA,EAASiB,IAAKjB,EAAQK,Y,UCuFpD,EArEkB,SAAC,GAAc,IAAZa,EAAW,EAAXA,KAgBXC,GAAMC,EAAAA,EAAAA,KAAND,EAER,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKE,IAAK,CAAEC,UAAWH,EAAE,SAAWI,aAAcL,EAAKK,eACvD,gBAAC,IAAD,CACE7B,SAAUwB,EAAKK,aAAa7B,SAC5BE,gBAAiBsB,EAAKK,aAAa3B,kBAErC,4BACE,gBAAC,EAAD,CAAcmB,SAAUG,EAAKM,iBAAiBC","sources":["webpack://my-gatsby-blog/./src/components/headings.js","webpack://my-gatsby-blog/./src/components/article-card.js","webpack://my-gatsby-blog/./src/components/articles-grid.js","webpack://my-gatsby-blog/./src/pages/index.js"],"sourcesContent":["import React from \"react\"\n// import { useStaticQuery, graphql } from \"gatsby\"\n\nconst Headings = ({ siteName = undefined, siteDescription = undefined }) => {\n  // const { strapiGlobal } = useStaticQuery(graphql`\n  //   query {\n  //     strapiGlobal {\n  //       siteName\n  //       siteDescription\n  //     }\n  //   }\n  // `)\n  return (\n    <header className=\"container mt-8\">\n      <h1 className=\"text-6xl font-bold text-neutral-700\">{siteName}</h1>\n      {siteDescription && (\n        <p className=\"mt-4 text-2xl text-neutral-500\">{siteDescription}</p>\n      )}\n    </header>\n  )\n}\n\nexport default Headings\n","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nconst { localizedUrl } = require(\"../util\")\n// import { LocalizedLink } from \"gatsby-plugin-internationalization\"\n\nconst ArticleCard = ({ article }) => {\n  return (\n    <Link\n      to={localizedUrl({\n        locale: article.locale,\n        url: `article/${article.slug}`,\n      })}\n      className=\"overflow-hidden rounded-lg bg-white shadow-sm transition-shadow hover:shadow-md\"\n    >\n      <GatsbyImage\n        image={getImage(article.cover?.localFile)}\n        alt={article.cover?.alternativeText}\n      />\n      <div className=\"px-4 py-4\">\n        <h3 className=\"font-bold text-neutral-700\">{article.title}</h3>\n        <p className=\"mt-2 text-neutral-500 line-clamp-2\">\n          {article.description}\n        </p>\n      </div>\n    </Link>\n  )\n}\n\nexport const query = graphql`\n  fragment ArticleCard on STRAPI_ARTICLE {\n    id\n    locale\n    slug\n    title\n    description\n    cover {\n      alternativeText\n      localFile {\n        childImageSharp {\n          gatsbyImageData(aspectRatio: 1.77)\n        }\n      }\n    }\n  }\n`\n\nexport default ArticleCard\n","import React from \"react\"\nimport ArticleCard from \"./article-card\"\n\nconst ArticlesGrid = ({ articles }) => {\n  return (\n    <div className=\"container mt-12 grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-3\">\n      {articles.map((article) => (\n        <ArticleCard article={article} key={article.slug} />\n      ))}\n    </div>\n  )\n}\n\nexport default ArticlesGrid\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Headings from \"../components/headings\"\nimport ArticlesGrid from \"../components/articles-grid\"\nimport { useTranslation } from \"react-i18next\"\n\n// const getRedirectLanguage = () => {\n//   if (typeof navigator === `undefined`) {\n//     return \"en\"\n//   }\n\n//   const lang =\n//     navigator && navigator.language && navigator.language.split(\"-\")[0]\n//   if (!lang) return \"ko\"\n\n//   switch (lang) {\n//     case \"en\":\n//       return \"en\"\n//     default:\n//       return \"ko\"\n//   }\n// }\n\nconst IndexPage = ({ data }) => {\n  // const { allStrapiArticle, strapiGlobal } = useStaticQuery(graphql`\n  //   query {\n  //     allStrapiArticle {\n  //       nodes {\n  //         ...ArticleCard\n  //       }\n  //     }\n  //     strapiGlobal {\n  //       siteName\n  //       siteDescription\n  //     }\n  //   }\n  // `)\n\n  // console.log(data)\n  const { t } = useTranslation()\n\n  return (\n    <Layout>\n      <Seo seo={{ metaTitle: t(\"home\") }} strapiGlobal={data.strapiGlobal} />\n      <Headings\n        siteName={data.strapiGlobal.siteName}\n        siteDescription={data.strapiGlobal.siteDescription}\n      />\n      <main>\n        <ArticlesGrid articles={data.allStrapiArticle.nodes} />\n      </main>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(filter: { language: { eq: $language } }) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n    allStrapiArticle(filter: { locale: { eq: $language } }) {\n      nodes {\n        ...ArticleCard\n      }\n    }\n    strapiGlobal(locale: { eq: $language }) {\n      siteName\n      siteDescription\n      favicon {\n        localFile {\n          url\n        }\n      }\n      defaultSeo {\n        metaTitle\n        metaDescription\n        shareImage {\n          localFile {\n            url\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n"],"names":["siteName","undefined","siteDescription","className","localizedUrl","require","article","Link","to","locale","url","slug","G","image","getImage","cover","localFile","alt","alternativeText","title","description","articles","map","key","data","t","useTranslation","seo","metaTitle","strapiGlobal","allStrapiArticle","nodes"],"sourceRoot":""}